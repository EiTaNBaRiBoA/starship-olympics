[gd_scene load_steps=11 format=3 uid="uid://bvuxtptpfc1lq"]

[ext_resource type="PackedScene" uid="uid://dmlwbymobhm0b" path="res://godot4/debug/TestChamber.tscn" id="1_4pv1n"]
[ext_resource type="PackedScene" uid="uid://cgjeqx4n1ot0e" path="res://godot4/actors/ships/Ship.tscn" id="2_bml84"]
[ext_resource type="PackedScene" uid="uid://d3d15u074tcak" path="res://actors/brains/PlayerBrain.tscn" id="3_cir4l"]
[ext_resource type="Script" path="res://godot4/VBeveledRect.gd" id="4_exn8r"]

[sub_resource type="GDScript" id="GDScript_0rj7w"]
script/source = "extends TestChamberLog


func _ready():
	super._ready()
	Events.sth_collected.connect(_on_sth_collected)
	
func _on_sth_collected(collector, collectee):
	log_line(\"[b]%s[/b] collected [b]%s[/b]\" % [collector.name, collectee.name])
"

[sub_resource type="GDScript" id="GDScript_6fggs"]
script/source = "@tool
extends Node

@export var width := 200 : set = set_width
@export var height := 200 : set = set_height
@export var bevel := 50 : set = set_bevel
@export var shape : VBeveledRect : set = set_shape

@export var hosts : Array


func set_width(v: int) -> void:
	width = v
	update()
	
func set_height(v: int) -> void:
	height = v
	update()
	
func set_bevel(v: int) -> void:
	bevel = v
	update()
	
func set_shape(v: VBeveledRect) -> void:
	shape = v
	update()
	
func _ready():
	shape.changed.connect(update)
	
func update() -> void:
	Events.log.emit('Updated')
"

[sub_resource type="Resource" id="Resource_5qrvp"]
script = ExtResource("4_exn8r")
width = 200
height = 200
bevel = 50

[sub_resource type="Animation" id="Animation_lxue6"]
resource_name = "new_animation"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("VShape:shape:width")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [200, 600]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("VShape:shape:height")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [200, 100]
}

[sub_resource type="Animation" id="Animation_mki1b"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("VShape:shape:width")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [200]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("VShape:shape:height")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [200]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_2ebs3"]
_data = {
"RESET": SubResource("Animation_mki1b"),
"new_animation": SubResource("Animation_lxue6")
}

[node name="TestChamber" instance=ExtResource("1_4pv1n")]

[node name="TestChamberLog" parent="." index="4"]
script = SubResource("GDScript_0rj7w")

[node name="Ship" parent="." index="8" instance=ExtResource("2_bml84")]
unique_name_in_owner = true

[node name="PlayerBrain" parent="Ship" index="12" instance=ExtResource("3_cir4l")]

[node name="StaticBody2D" type="StaticBody2D" parent="." index="9"]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="StaticBody2D" index="0"]

[node name="Polygon2D" type="Polygon2D" parent="StaticBody2D" index="1"]

[node name="Line2D" type="Line2D" parent="StaticBody2D" index="2"]

[node name="VShape" type="Node" parent="StaticBody2D" index="3"]
script = SubResource("GDScript_6fggs")
shape = SubResource("Resource_5qrvp")

[node name="AnimationPlayer" type="AnimationPlayer" parent="StaticBody2D" index="4"]
libraries = {
"": SubResource("AnimationLibrary_2ebs3")
}
autoplay = "new_animation"
